// <auto-generated />
using System;
using Attendance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Attendance.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20201111095558_changeinttodouble5")]
    partial class changeinttodouble5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Attendance.Model.DataBase.AnalysisOfDay", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("card_id")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.Property<DateTime>("date")
                        .HasColumnType("date");

                    b.Property<string>("emp_name")
                        .IsRequired()
                        .HasColumnType("char(30)");

                    b.Property<byte>("first_hr")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("first_tm")
                        .HasColumnType("datetime");

                    b.Property<bool>("half_late")
                        .HasColumnType("bool");

                    b.Property<TimeSpan>("half_late_tm")
                        .HasColumnType("time");

                    b.Property<bool>("half_leave_early")
                        .HasColumnType("bool");

                    b.Property<TimeSpan>("half_leave_early_tm")
                        .HasColumnType("time");

                    b.Property<string>("job_num")
                        .IsRequired()
                        .HasColumnType("char(5)");

                    b.Property<byte>("last_hr")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("last_tm")
                        .HasColumnType("datetime");

                    b.Property<bool>("late")
                        .HasColumnType("bool");

                    b.Property<TimeSpan>("late_tm")
                        .HasColumnType("time");

                    b.Property<bool>("leave_early")
                        .HasColumnType("bool");

                    b.Property<TimeSpan>("leave_early_tm")
                        .HasColumnType("time");

                    b.Property<bool>("perfect")
                        .HasColumnType("bool");

                    b.Property<byte>("punch_card_count_total")
                        .HasColumnType("tinyint");

                    b.Property<byte>("punch_card_count_valid")
                        .HasColumnType("tinyint");

                    b.Property<byte>("punch_card_hour")
                        .HasColumnType("tinyint");

                    b.Property<short>("punch_card_hour_compare")
                        .HasColumnType("smallint");

                    b.Property<short>("punch_card_minute_compare")
                        .HasColumnType("smallint");

                    b.Property<TimeSpan>("punch_card_time")
                        .HasColumnType("time");

                    b.Property<string>("shift")
                        .IsRequired()
                        .HasColumnType("char(6)");

                    b.Property<byte>("week")
                        .HasColumnType("tinyint");

                    b.HasKey("id");

                    b.ToTable("analysis_of_day");
                });

            modelBuilder.Entity("Attendance.Model.DataBase.AnalysisOfMonth", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<byte>("absence_punch_card_day_count")
                        .HasColumnType("tinyint");

                    b.Property<string>("absence_punch_card_day_list")
                        .HasColumnType("char(70)");

                    b.Property<byte>("absence_sections_count")
                        .HasColumnType("tinyint");

                    b.Property<TimeSpan>("attenadance_time_of_day")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("attendance_time_of_month")
                        .HasColumnType("time");

                    b.Property<string>("card_id")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.Property<DateTime>("date")
                        .HasColumnType("date");

                    b.Property<string>("emp_name")
                        .IsRequired()
                        .HasColumnType("char(30)");

                    b.Property<byte>("end_hour_change_times")
                        .HasColumnType("tinyint");

                    b.Property<string>("end_hour_unique_list")
                        .HasColumnType("char(45)");

                    b.Property<byte>("exceed_punch_card_day_count")
                        .HasColumnType("tinyint");

                    b.Property<string>("exceed_punch_card_day_list")
                        .HasColumnType("char(30)");

                    b.Property<bool>("exist_long_holiday")
                        .HasColumnType("bool");

                    b.Property<bool>("full_attendance")
                        .HasColumnType("bool");

                    b.Property<bool>("has_only_one_punch_card_day")
                        .HasColumnType("bool");

                    b.Property<string>("job_num")
                        .IsRequired()
                        .HasColumnType("char(5)");

                    b.Property<bool>("limited_full_attendance")
                        .HasColumnType("bool");

                    b.Property<string>("only_one_punch_card_day_list")
                        .HasColumnType("char(30)");

                    b.Property<double>("punch_card_count_day")
                        .HasColumnType("double");

                    b.Property<short>("punch_card_count_month")
                        .HasColumnType("smallint");

                    b.Property<byte>("punch_card_day_count")
                        .HasColumnType("tinyint");

                    b.Property<string>("role_speculate")
                        .HasColumnType("char(12)");

                    b.Property<byte>("start_hour_change_times")
                        .HasColumnType("tinyint");

                    b.Property<string>("start_hour_unique_list")
                        .HasColumnType("char(45)");

                    b.HasKey("id");

                    b.ToTable("analysis_of_month");
                });

            modelBuilder.Entity("Attendance.Model.DataBase.AttendanceInfo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("card_id")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.Property<string>("emp_name")
                        .IsRequired()
                        .HasColumnType("char(30)");

                    b.Property<DateTime>("inout_time")
                        .HasColumnType("datetime");

                    b.Property<string>("job_num")
                        .IsRequired()
                        .HasColumnType("char(5)");

                    b.Property<bool>("pass")
                        .HasColumnType("bool");

                    b.Property<byte>("place")
                        .HasColumnType("tinyint");

                    b.Property<int>("seq_num")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("attendance_info");
                });

            modelBuilder.Entity("Attendance.Model.DataBase.HolidayChanges", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("day")
                        .HasColumnType("date");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.HasKey("id");

                    b.ToTable("holiday_changes");
                });

            modelBuilder.Entity("Attendance.Model.DataBase.SkipEmployee", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("card_id")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.Property<string>("emp_name")
                        .IsRequired()
                        .HasColumnType("char(30)");

                    b.Property<string>("job_num")
                        .IsRequired()
                        .HasColumnType("char(5)");

                    b.HasKey("id");

                    b.ToTable("skip_employee");
                });
#pragma warning restore 612, 618
        }
    }
}
